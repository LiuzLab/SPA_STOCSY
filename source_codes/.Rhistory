(blue zones are the separations among clusters)")
base_size = 12
qplot(ppm, avg.d1, geom = "line", col = land.cut, ylab = "Intensity (a.u.)", xlab = "Chemical shift (ppm)")+
scale_colour_gradient(low="blue", high="red") +
theme_bw()+
scale_x_reverse()+
theme(legend.position = "none", axis.title.x =  element_text(size = 15),axis.title.y = element_text(angle = 90, size = 15),
axis.text.x = element_text(size = 15, vjust = 1),
axis.text.y = element_text(size = 15, hjust = 1),
axis.ticks.x = element_line(), axis.ticks.y = element_line())+ theme(panel.background = element_blank())+
theme(axis.line = element_line())+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.x =
element_text(size = base_size , angle = 0, hjust =0, colour =
"black"), axis.text.y = element_text(size = base_size , angle = 0, hjust =1, colour =
"black"), axis.ticks.x = element_line(), axis.ticks.y = element_line())+
theme(panel.grid.major = element_blank())+
theme(panel.background = element_blank())
print("SPA results visualized in the spectra:")
print("(blue zones are the separations among clusters)")
base_size = 12
qplot(ppm, avg.d1, geom = "line", col = land.cut, ylab = "Intensity (a.u.)", xlab = "Chemical shift (ppm)")+
scale_colour_gradient(low="blue", high="red") +
theme_bw()+
scale_x_reverse()+
theme(legend.position = "none", axis.title.x =  element_text(size = 15),axis.title.y = element_text(angle = 90, size = 15),
axis.text.x = element_text(size = 15, vjust = 1),
axis.text.y = element_text(size = 15, hjust = 1),
axis.ticks.x = element_line(), axis.ticks.y = element_line())+ theme(panel.background = element_blank())+
theme(axis.line = element_line())+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.x =
element_text(size = base_size , angle = 0, hjust =0, colour =
"black"), axis.text.y = element_text(size = base_size , angle = 0, hjust =1, colour =
"black"), axis.ticks.x = element_line(), axis.ticks.y = element_line())+
theme(panel.grid.major = element_blank())+
theme(panel.background = element_blank())
print("SPA results visualized in the spectra:(blue zones are the separations among clusters)")
base_size = 12
qplot(ppm, avg.d1, geom = "line", col = land.cut, ylab = "Intensity (a.u.)", xlab = "Chemical shift (ppm)")+
scale_colour_gradient(low="blue", high="red") +
theme_bw()+
scale_x_reverse()+
theme(legend.position = "none", axis.title.x =  element_text(size = 15),axis.title.y = element_text(angle = 90, size = 15),
axis.text.x = element_text(size = 15, vjust = 1),
axis.text.y = element_text(size = 15, hjust = 1),
axis.ticks.x = element_line(), axis.ticks.y = element_line())+ theme(panel.background = element_blank())+
theme(axis.line = element_line())+
theme(legend.position = "none", axis.ticks = element_blank(), axis.text.x =
element_text(size = base_size , angle = 0, hjust =0, colour =
"black"), axis.text.y = element_text(size = base_size , angle = 0, hjust =1, colour =
"black"), axis.ticks.x = element_line(), axis.ticks.y = element_line())+
theme(panel.grid.major = element_blank())+
theme(panel.background = element_blank())
print("Select one of CWT or simple peak detection methods to proceed.")
dat.spa <- ints  # intensities are calcualted by averaging the hump intensities with in that cluster.
cor.dat.spa <- cor(ints)
dim(ints)
dim(cor.dat.spa)
range(cor.dat.spa)
myImagePlot2(cor.dat.spa)
#set threshold for correlation among clusters
#Here set threshold as 0.8
a.8 <- cor.dat.spa
a.8[a.8 < 0.8] <- 0
myImagePlot2(a.8)
##Have highly correlated clusters in list
a8 <- gen.J.couple(cor.dat.spa, .8)
##Visualize the positions of different clusters with 'clus' function
clus(id=c(5,9,11,17))
peaks=splus2R::peaks #specify the peaks function from splus2R package
pks <- Peak_simple(dat, ppm, thresh.scale = 10, snr = 3, snr.thresh=10)
idx.pk <- pks$idx.pk
pk.ppm <- ppm[idx.pk]
rm(clus.rg, clus.pk)
cluster_peak=NULL
for(i in 1: max(clus.mem)){
clus.rg <- ppm[which(clus.mem ==i)]
clus.pk <- pk.ppm[pk.ppm %in% clus.rg]
if(length(clus.pk)!=0){
for(j in 1:length(clus.pk)){
cluster_peak=rbind(cluster_peak,c(i,clus.pk[j]))
}}else{cluster_peak=rbind(cluster_peak,c(i,NA))}
}
cluster_peak=as.data.frame(cluster_peak)
colnames(cluster_peak)=c("cls","cls.pk")
cluster_peak
clus.mem
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("cluster_peak.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
cluster_peak=cluster_peak(clus.mem,ppm,pk.ppm)
cluster_peak
a8_profile=list()
for(i in 1:length(a8)){
clus=a8[[i]]
clus_peak=cluster_peak[which(cluster_peak$cls%in%clus),]
a8_profile[[i]]=clus_peak
}
a8_profile
a8_summary=list()
for(i in 1:length(a8)){
a8_summary[[i]]=list()
a8_summary[[i]][1]=as.data.frame(a8[[i]],ncol=1)
profile=a8_profile[[i]]
profile=rbind(c("cls","cls.pk"),profile)
profile[,1]=paste(profile$cls,profile$cls.pk,sep=" ")
profile=profile[,-2]
profile=as.data.frame(as.character(profile))
colnames(profile)="summary"
profile$summary=as.character(profile$summary)
a8_summary[[i]][2]=profile
}
a8_summary
a8
cor_clus
a8_profile
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("cluster_peak.r")
source("gen_summary_profile.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
a8_summary=gen_summary_profile(cor_clus=a8,cluster_peak)
profile=list()
cor_clus=a8
cluster_peak()
cluster_peak
cluster_peak
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("combine_cluster_peak.r")
source("gen_summary_profile.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
cluster_peak=combine_cluster_peak(clus.mem,ppm,pk.ppm)
cluster_peak
a8_summary=gen_summary_profile(cor_clus=a8,cluster_peak)
a8_summary
cluster_peak=combine_cluster_peak(clus.mem,ppm,pk.ppm)
a8_summary=gen_summary_profile(cor_clus=a8,cluster_peak)
cluster_peak
a8_summary
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("combine_cluster_peak.r")
source("gen_summary_profile.r")
source("gen_SPA_peaks.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("combine_cluster_peak.r")
source("gen_summary_profile.r")
source("gen_SPA_peaks.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("combine_cluster_peak.r")
source("gen_summary_profile.r")
source("gen_SPA_peaks.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
clus_mem=gen_SPA_peaks(profile=a8_summary,cluster_peak)
clus_mem
dim(clus_mem)
clus_mem[1:3,]
gen_stocsy_corr=function(profile){
num_clus=NULL
for(i in 1:length(profile)){
num_clus=c(num_clus,length(profile[[i]][[1]]))
}
spa_stocsy_corr=matrix(NA,nrow=length(profile),ncol=max(num_clus))
for(i in 1:length(profile)){
spa_stocsy_corr[i,1:length(profile[[i]][[1]])]=profile[[i]][[1]]
}
return(spa_stocsy_corr)
}
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("combine_cluster_peak.r")
source("gen_summary_profile.r")
source("gen_SPA_peaks.r")
source("gen_stocsy_corr_clusters.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
spa_stocsy_corr=gen_stocsy_corr(profile=a8_summary)
spa_stocsy_corr
spa_stocsy_corr[5,]
spa_stocsy_corr[4,]
##summarize peak lists in every SPA cluster
clus_mem=gen_SPA_peaks(profile=a8_summary,cluster_peak)
write.csv(clus_mem,"~/Desktop/test/SPA_cluster_peaks.csv")
##summarize peak lists in every SPA cluster
clus_mem=gen_SPA_peaks(profile=a8_summary,cluster_peak)
write.csv(clus_mem,"~/Desktop/SPA-STOCSY/submit_github/output/SPA_cluster_peaks.csv")
##summarize highly-correlated clusters
spa_stocsy_corr=gen_stocsy_corr(profile=a8_summary)
write.csv(spa_stocsy_corr, "~/Desktop/SPA-STOCSY/submit_github/output/STOCSY_corr_clusters.csv")
paste(output_dir,"SPA_rds.rds")
##specify code_dir to load the source codes
code_dir <- "~/Desktop/SPA-STOCSY/submit_github/source_codes/"
data_dir <- "~/Desktop/SPA-STOCSY/submit_github/input_data/"
output_dir <- "~/Desktop/SPA-STOCSY/submit_github/output/"
setwd(code_dir)
{source("Gen.spa.group_113011.R")
source("pred.strength.r")
source("Ints_avg_mod.r")
source("Select.gam.r")
source("Cor.stat.r")
source("Cor_landscape.r")
source("Landscape_cut.r")
source("Clust.member.r")
source("Gen_co_member.r")
source("Gen.ct.r")
source("peaks.correct.r")
source("norm_kern.r")
source("tri_cube_kern.r")
source("Epane_kern.r")
source("plot.land.r")
source("plot_pred.streth.r")
source("PQ_norm_113011_signal_v1.r")
source("Noise.estimate_113011.r")
source("baseline_removal_113011.r")
source("align.r")
source("ms_peak_123011.r")
source("peak_detection_cwt_v2.r")
source("Peak_simple_112111.r")
source("myImagePlot2.r")
source("gen.J.couple.r")
source("clus.r")
source("clus_region.r")
source("combine_cluster_peak.r")
source("gen_summary_profile.r")
source("gen_SPA_peaks.r")
source("gen_stocsy_corr_clusters.r")
source("Build_new.r")
source("PkinReg.r")
source("Auto_dect_one.r")
source("ftn.r")
source("FindMeta.r")
}
paste(output_dir,"SPA_rds.rds")
paste(output_dir,"SPA_rds.rds",sep="")
paste(output_dir,"SPA_cluster_peaks.csv",sep="")
paste(output_dir,"STOCSY_corr_clusters.csv",sep = "")
##load Chenomx library data
setwd(data_dir)
filename = "chx_lib_trunc.csv"
# Read data
Chx_lib <- read.csv(filename, header = T)
Chx_lib <- as.data.frame(Chx_lib)
colnames(Chx_lib) <- c("meta_name", "clus_ct")
meta_name <- as.character(unique(Chx_lib$meta_name))
head(Chx_lib)
##shift to set upper and lower boundaries for each cluster
ppm_shift_thre = 0.025
new_lib <- Build_new(meta_name, ppm_shift_thre)
head(new_lib)
setwd(output_dir)
setwd(output_dir)
clus_mem <- read.csv("SPA_cluster_peaks.csv", header = T)
col_name=NULL
for(nc in 1:(ncol(clus_mem)-1)){
col_name=c(col_name,paste("pk",nc,sep=""))
}
colnames(clus_mem)=c("clus_id",col_name)
head(clus_mem)
spa_stocsy_corr <- read.csv('STOCSY_corr_clusters.csv', header = T)
spa_stocsy_corr <- read.csv('STOCSY_corr_clusters.csv', header = T)
##Load previous saved SPA_cluster_peaks.csv and STOCSY_corr_clusters.csv if necessary
setwd(output_dir)
clus_mem <- read.csv("SPA_cluster_peaks.csv", header = T)
col_name=NULL
for(nc in 1:(ncol(clus_mem)-1)){
col_name=c(col_name,paste("pk",nc,sep=""))
}
colnames(clus_mem)=c("clus_id",col_name)
head(clus_mem)
spa_stocsy_corr <- read.csv('STOCSY_corr_clusters.csv', header = T)
spa_stocsy_corr=spa_stocsy_corr[,-1]
head(spa_stocsy_corr)
paste(output_dir,"auto_identify_metabolites.csv",sep="")
##summarize peak lists in every SPA cluster
clus_mem=gen_SPA_peaks(profile=a8_summary,cluster_peak)
clus_mem
clus_mem[1:3,]
